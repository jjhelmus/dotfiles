# Use C-a like in screen
set-option -g prefix C-a
bind a send-prefix
bind-key C-a last-window

# reload tmux config with r
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

# Start numbering at 1
set -g base-index 1

# Faster commands
set -s escape-time 0

# more vim-like copymode
setw -g mode-keys vi
bind Escape copy-mode
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# vim style pane navigation
unbind-key h
unbind-key j
unbind-key k
unbind-key l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Adapted from https://github.com/tangledhelix/dotfiles/blob/master/tmux.conf
# mouse mode is on by default
# <prefix> m/M will turn it on or off
# comment/uncomment lines depending on tmux version

# tmux 2.1+
#set -g mouse on
#
#bind m \
#    set -g mouse on \;\
#    display "Mouse ON"
#
#bind M \
#    set -g mouse off  \;\
#    display "Mouse OFF"

# tmux < 2.1 
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display "Mouse ON"

bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display "Mouse OFF"

# pretty basic status bar
set -g status on
set -g status-bg black
set -g status-fg white
set -g status-left ''

# Highlight active window
set-window-option -g window-status-current-bg red

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
